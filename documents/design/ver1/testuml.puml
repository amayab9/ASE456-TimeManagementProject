@startuml
class MyApp {
---
build(): Widget
}
StatelessWidget <|-- MyApp
class MyHomePage {
---
build(): Widget
}
StatelessWidget <|-- MyHomePage
class PriorityPage {
---
createState(): _PriorityState
}
StatefulWidget <|-- PriorityPage
class _PriorityState {
queriedData: List<Map<String, dynamic>>
---
-_reportData(): Future<void>
build(): Widget
}
State <|-- _PriorityState
class QueryPage {
---
createState(): _QueryPageState
}
StatefulWidget <|-- QueryPage
class _QueryPageState {
queryController: TextEditingController
dropdownValue: String?
queriedData: List<String>
selectedDate: DateTime?
---
-_performQuery(): Future<void>
-_isValidDateFormat(): bool
-_formatTimestamp(): String
-_formatTime(): String
-_queryInformation(): void
build(): Widget
}
State <|-- _QueryPageState
_QueryPageState ..> TextEditingController
_QueryPageState ..> DateTime
class RecordTimePage {
---
createState(): _RecordTimePageState
}
StatefulWidget <|-- RecordTimePage
class _RecordTimePageState {
dateController: TextEditingController
fromTimeController: TextEditingController
toTimeController: TextEditingController
taskController: TextEditingController
tagController: TextEditingController
---
build(): Widget
-_saveTimeRecord(): void
-_parseDate(): DateTime
-_parseTime(): TimeOfDay
}
State <|-- _RecordTimePageState
_RecordTimePageState ..> TextEditingController
class ReportPage {
---
createState(): _ReportState
}
StatefulWidget <|-- ReportPage
class _ReportState {
startDateController: TextEditingController
endDateController: TextEditingController
queriedData: List<String>
---
-_reportData(): Future<void>
-_isValidDateFormat(): bool
-_formatTimestamp(): String
-_formatTime(): String
build(): Widget
}
State <|-- _ReportState
_ReportState ..> TextEditingController
@enduml

